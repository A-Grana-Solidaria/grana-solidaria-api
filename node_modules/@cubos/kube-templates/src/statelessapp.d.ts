import { ObjectMeta } from "./kubernetes";
interface StatelessAppSpec {
    replicas?: number | [number, number];
    disablePreemptibility?: boolean;
    image: string;
    command?: string[];
    envs?: {
        [env: string]: string | number | {
            secretName: string;
            key: string;
        };
    };
    forwardEnvs?: string[];
    secretEnvs?: string[];
    cpu: {
        request: string | number;
        limit: string | number;
    };
    memory: {
        request: string | number;
        limit: string | number;
    };
    ports?: (({
        type: "http";
        ingressClass?: string;
        ingressAnnotations?: Record<string, string>;
        publicUrl?: string | string[];
        tlsCert?: string;
        timeout?: number;
        maxBodySize?: string;
        endpoints?: Array<{
            publicUrl?: string;
            tlsCert?: string;
            maxBodySize?: string;
        }>;
    } | {
        type: "tcp";
    }) & {
        name?: string;
        port: number;
        containerPort?: number;
        serviceType?: "ExternalName" | "ClusterIP" | "NodePort" | "LoadBalancer";
    })[];
    check?: ({
        port: number;
        httpGetPath?: string;
        host?: string;
    } | {
        command: string[];
    }) & {
        period?: number;
        initialDelay?: number;
    };
    volumes?: {
        type: "configMap" | "secret";
        optional?: boolean;
        readOnly?: boolean;
        name: string;
        mountPath: string;
        items?: {
            key: string;
            path: string;
        }[];
    }[];
}
export declare class StatelessApp {
    private metadata;
    private spec;
    constructor(metadata: ObjectMeta, spec: StatelessAppSpec);
    get yaml(): string;
}
export {};
