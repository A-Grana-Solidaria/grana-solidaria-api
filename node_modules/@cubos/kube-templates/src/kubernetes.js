"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.PersistentVolumeClaim = exports.Job = exports.PodDisruptionBudget = exports.CronJob = exports.ConfigMap = exports.Secret = exports.HorizontalPodAutoscaler = exports.Ingress = exports.Service = exports.StatefulSet = exports.Deployment = exports.Namespace = void 0;
var helpers_1 = require("./helpers");
var Namespace = /** @class */ (function () {
    function Namespace(metadata, spec) {
        this.metadata = metadata;
        this.spec = spec;
    }
    Object.defineProperty(Namespace.prototype, "yaml", {
        get: function () {
            return helpers_1.generateYaml([
                {
                    apiVersion: "v1",
                    kind: "Namespace",
                    metadata: this.metadata,
                    spec: this.spec,
                },
            ]);
        },
        enumerable: false,
        configurable: true
    });
    return Namespace;
}());
exports.Namespace = Namespace;
var Deployment = /** @class */ (function () {
    function Deployment(metadata, spec) {
        this.metadata = metadata;
        this.spec = spec;
    }
    Object.defineProperty(Deployment.prototype, "yaml", {
        get: function () {
            return helpers_1.generateYaml([
                {
                    apiVersion: "apps/v1",
                    kind: "Deployment",
                    metadata: this.metadata,
                    spec: this.spec,
                },
            ]);
        },
        enumerable: false,
        configurable: true
    });
    return Deployment;
}());
exports.Deployment = Deployment;
var StatefulSet = /** @class */ (function () {
    function StatefulSet(metadata, spec) {
        this.metadata = metadata;
        this.spec = spec;
    }
    Object.defineProperty(StatefulSet.prototype, "yaml", {
        get: function () {
            return helpers_1.generateYaml([
                {
                    apiVersion: "apps/v1",
                    kind: "StatefulSet",
                    metadata: this.metadata,
                    spec: this.spec,
                },
            ]);
        },
        enumerable: false,
        configurable: true
    });
    return StatefulSet;
}());
exports.StatefulSet = StatefulSet;
var Service = /** @class */ (function () {
    function Service(metadata, spec) {
        this.metadata = metadata;
        this.spec = spec;
    }
    Object.defineProperty(Service.prototype, "yaml", {
        get: function () {
            return helpers_1.generateYaml([
                {
                    apiVersion: "v1",
                    kind: "Service",
                    metadata: this.metadata,
                    spec: this.spec,
                },
            ]);
        },
        enumerable: false,
        configurable: true
    });
    return Service;
}());
exports.Service = Service;
var Ingress = /** @class */ (function () {
    function Ingress(metadata, spec) {
        this.metadata = metadata;
        this.spec = spec;
    }
    Object.defineProperty(Ingress.prototype, "yaml", {
        get: function () {
            return helpers_1.generateYaml([
                {
                    apiVersion: "networking.k8s.io/v1beta1",
                    kind: "Ingress",
                    metadata: this.metadata,
                    spec: this.spec,
                },
            ]);
        },
        enumerable: false,
        configurable: true
    });
    return Ingress;
}());
exports.Ingress = Ingress;
var HorizontalPodAutoscaler = /** @class */ (function () {
    function HorizontalPodAutoscaler(metadata, spec) {
        this.metadata = metadata;
        this.spec = spec;
    }
    Object.defineProperty(HorizontalPodAutoscaler.prototype, "yaml", {
        get: function () {
            return helpers_1.generateYaml([
                {
                    apiVersion: "autoscaling/v1",
                    kind: "HorizontalPodAutoscaler",
                    metadata: this.metadata,
                    spec: this.spec,
                },
            ]);
        },
        enumerable: false,
        configurable: true
    });
    return HorizontalPodAutoscaler;
}());
exports.HorizontalPodAutoscaler = HorizontalPodAutoscaler;
var Secret = /** @class */ (function () {
    function Secret(metadata, data) {
        this.metadata = metadata;
        this.data = data;
    }
    Object.defineProperty(Secret.prototype, "yaml", {
        get: function () {
            var data = undefined;
            var targetData = this.data;
            if (targetData) {
                data = {};
                for (var key in targetData) {
                    var value = targetData[key];
                    if (!(value instanceof Buffer)) {
                        value = Buffer.from(value);
                    }
                    data[key] = value.toString("base64");
                }
            }
            return helpers_1.generateYaml([
                {
                    apiVersion: "v1",
                    data: data,
                    kind: "Secret",
                    metadata: this.metadata,
                },
            ]);
        },
        enumerable: false,
        configurable: true
    });
    return Secret;
}());
exports.Secret = Secret;
var ConfigMap = /** @class */ (function () {
    function ConfigMap(metadata, data) {
        this.metadata = metadata;
        this.data = data;
    }
    Object.defineProperty(ConfigMap.prototype, "yaml", {
        get: function () {
            return helpers_1.generateYaml([
                {
                    apiVersion: "v1",
                    data: this.data,
                    kind: "ConfigMap",
                    metadata: this.metadata,
                },
            ]);
        },
        enumerable: false,
        configurable: true
    });
    return ConfigMap;
}());
exports.ConfigMap = ConfigMap;
var CronJob = /** @class */ (function () {
    function CronJob(metadata, spec) {
        this.metadata = metadata;
        this.spec = spec;
    }
    Object.defineProperty(CronJob.prototype, "yaml", {
        get: function () {
            return helpers_1.generateYaml([
                {
                    apiVersion: "batch/v1beta1",
                    kind: "CronJob",
                    metadata: this.metadata,
                    spec: this.spec,
                },
            ]);
        },
        enumerable: false,
        configurable: true
    });
    return CronJob;
}());
exports.CronJob = CronJob;
var PodDisruptionBudget = /** @class */ (function () {
    function PodDisruptionBudget(metadata, spec) {
        this.metadata = metadata;
        this.spec = spec;
    }
    Object.defineProperty(PodDisruptionBudget.prototype, "yaml", {
        get: function () {
            return helpers_1.generateYaml([
                {
                    apiVersion: "policy/v1beta1",
                    kind: "PodDisruptionBudget",
                    metadata: this.metadata,
                    spec: this.spec
                }
            ]);
        },
        enumerable: false,
        configurable: true
    });
    return PodDisruptionBudget;
}());
exports.PodDisruptionBudget = PodDisruptionBudget;
var Job = /** @class */ (function () {
    function Job(metadata, spec) {
        this.metadata = metadata;
        this.spec = spec;
    }
    Object.defineProperty(Job.prototype, "yaml", {
        get: function () {
            return helpers_1.generateYaml([
                {
                    apiVersion: "batch/v1",
                    kind: "Job",
                    metadata: this.metadata,
                    spec: this.spec
                }
            ]);
        },
        enumerable: false,
        configurable: true
    });
    return Job;
}());
exports.Job = Job;
var PersistentVolumeClaim = /** @class */ (function () {
    function PersistentVolumeClaim(metadata, spec) {
        this.metadata = metadata;
        this.spec = spec;
    }
    Object.defineProperty(PersistentVolumeClaim.prototype, "yaml", {
        get: function () {
            return helpers_1.generateYaml([
                {
                    apiVersion: "v1",
                    kind: "PersistentVolumeClaim",
                    metadata: this.metadata,
                    spec: this.spec,
                },
            ]);
        },
        enumerable: false,
        configurable: true
    });
    return PersistentVolumeClaim;
}());
exports.PersistentVolumeClaim = PersistentVolumeClaim;
